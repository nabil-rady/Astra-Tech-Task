{
    "openapi": "3.0.0",
    "info": {
        "title": "Astra Tech API Store",
        "description": "Swagger OpenAPI description",
        "contact": {
            "email": "nabil-rady@outlook.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "description": "Register and logs user in and returns access token",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "confirm_password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "nabil"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "example@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "12345678"
                                    },
                                    "confirm_password": {
                                        "type": "string",
                                        "example": "12345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful registration"
                    },
                    "422": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "description": "Logs user in and returns access token",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "example@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "12345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login"
                    },
                    "422": {
                        "description": "Bad request"
                    },
                    "403": {
                        "description": "Incorrect login"
                    }
                }
            }
        },
        "/api/category": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "description": "Returns all available categories",
                "operationId": "getCategories",
                "responses": {
                    "200": {
                        "description": "Successful"
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "description": "Creates a new category and returns it, needs admin authorization",
                "operationId": "createCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "image"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Tech"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "/404.png"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created category"
                    },
                    "422": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Unauthorized for non admins"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/category/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "description": "Returns category with given id",
                "operationId": "getCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category that needs to be fetched",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "description": "Updates a category and returns it, needs admin authorization",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category that needs to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Tech"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "http://localhost:8000/404.png"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "422": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized for non admins"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "description": "Deletes a category, needs admin authorization",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized for non admins"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/order": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "description": "Creates an order and returns it, needs authentication",
                "operationId": "createOrder",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "image",
                                    "description",
                                    "price",
                                    "quantity",
                                    "category_id"
                                ],
                                "properties": {
                                    "products": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id",
                                                "quantity"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created order"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/product": {
            "get": {
                "tags": [
                    "Products"
                ],
                "description": "Returns all available products",
                "operationId": "getProducts",
                "responses": {
                    "200": {
                        "description": "Successful"
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "description": "Creates a new product and returns it, needs admin authorization",
                "operationId": "createProduct",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "image",
                                    "description",
                                    "price",
                                    "quantity",
                                    "category_id"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "iPhone"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "http://localhost:8000/404.png"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "This is a nice product"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 15.7
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "category_id": {
                                        "description": "Id of category that the product belongs to",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created category"
                    },
                    "422": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized for non admins"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/product/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "description": "Returns product with given id",
                "operationId": "getProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product that needs to be fetched",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "description": "Updates a product and returns it, needs admin authorization",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product that needs to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "iPhone"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "http://localhost:8000/404.png"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "This is a nice product"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 15.7
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "category_id": {
                                        "description": "Id of category that the product belongs to",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Bad request"
                    },
                    "403": {
                        "description": "Unauthorized for non admins"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "description": "Deletes a product, needs admin authorization",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized for non admins"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Bearer token for Laravel Sanctum authentication",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Operations related to authorization"
        },
        {
            "name": "Categories",
            "description": "Operations related to categories"
        },
        {
            "name": "Products",
            "description": "Operations related to products"
        },
        {
            "name": "Orders",
            "description": "Operations related to orders"
        }
    ]
}